@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PatientListParser" as PatientListParser LOGIC_COLOR
participant ":ListCommandPatientParser" as ListCommandPatientParser LOGIC_COLOR
participant ":ListCommandPatient" as ListCommandPatient LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("queryp" + " n/Jerome p/123 e/gmail.com a/depression")
activate LogicManager

LogicManager -> PatientListParser : parseCommand("queryp" + arguments)
activate PatientListParser

create ListCommandPatientParser
PatientListParser -> ListCommandPatientParser
activate ListCommandPatientParser

ListCommandPatientParser --> PatientListParser
deactivate ListCommandPatientParser

PatientListParser -> ListCommandPatientParser : parse(arguments)
activate ListCommandPatientParser

create ListCommandPatient
ListCommandPatientParser -> ListCommandPatient :  new ListCommandPatient(combinedPredicate) with AND logic
note right of ListCommandPatientParser : Details of how predicates are combined \nare simplified for the sake of diagramming.
activate ListCommandPatient

ListCommandPatient --> ListCommandPatientParser :
deactivate ListCommandPatient

ListCommandPatientParser --> PatientListParser : d
deactivate ListCommandPatientParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ListCommandPatientParser -[hidden]-> PatientListParser
destroy ListCommandPatientParser

PatientListParser --> LogicManager : d
deactivate PatientListParser

LogicManager -> ListCommandPatient : execute(m)
activate ListCommandPatient

ListCommandPatient -> Model : updateFilteredPersonList(combinedPredicate)
activate Model

Model --> ListCommandPatient
deactivate Model




ListCommandPatient --> LogicManager : command success
deactivate ListCommandPatient

[<--LogicManager : command successful
deactivate LogicManager
@enduml
