@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PatientListParser" as PatientListParser LOGIC_COLOR
participant ":EditAppointmentCommandParser" as EditAppointmentCommandParser LOGIC_COLOR
participant "ead:EditAppointmentDescriptor" as EditAppointmentDescriptor LOGIC_COLOR
participant "e:EditAppointmentCommand" as EditAppointmentCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("edita pid/1 aid/1 \nsd/2020-01-01 12:00 ed/2020-01-01 13:00")
activate LogicManager

LogicManager -> PatientListParser : parseCommand("edita pid/1 aid/1" + arguments)
activate PatientListParser

create EditAppointmentCommandParser
PatientListParser -> EditAppointmentCommandParser
activate EditAppointmentCommandParser

EditAppointmentCommandParser --> PatientListParser
deactivate EditAppointmentCommandParser

PatientListParser -> EditAppointmentCommandParser : parse(arguments)
activate EditAppointmentCommandParser

create EditAppointmentDescriptor
note right of EditAppointmentDescriptor : Methods in EditPersonDescriptor such as setName and\n setPhone may be used to create a defensive copy \nof the patient that is to be updated.
EditAppointmentCommandParser -> EditAppointmentDescriptor : new EditPersonDescriptor()
activate EditAppointmentDescriptor
EditAppointmentDescriptor -> EditAppointmentCommandParser : ead

deactivate EditAppointmentDescriptor
create EditAppointmentCommand
EditAppointmentCommandParser -> EditAppointmentCommand : new EditAppointmentCommand(appointment index, editPersonDescriptor)
activate EditAppointmentCommand
EditAppointmentCommand --> EditAppointmentCommandParser
deactivate EditAppointmentCommand

EditAppointmentCommandParser --> PatientListParser : e
deactivate EditAppointmentCommandParser

PatientListParser --> LogicManager : e
deactivate PatientListParser

LogicManager -> EditAppointmentCommand : execute
activate EditAppointmentCommand

EditAppointmentCommand -> Model : updateFilterAppointmentList
activate Model

Model --> EditAppointmentCommand
deactivate Model

EditAppointmentCommand -> CommandResult: new CommandResult()
activate CommandResult
CommandResult --> EditAppointmentCommand: r
deactivate CommandResult

EditAppointmentCommand --> LogicManager : r
deactivate EditAppointmentCommand

[<--LogicManager : command successful
deactivate LogicManager
@enduml
