@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CommandParser" as CommandParser LOGIC_COLOR
participant ":FilterAppointmentParser" as FilterAppointmentParser LOGIC_COLOR
participant "pre:FilterAppointmentPredicate" as FilterAppointmentPredicate LOGIC_COLOR
participant "f:FilterAppointmentCommand" as FilterAppointmentCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("args")
activate LogicManager
LogicManager -> CommandParser : parse("args")
activate CommandParser

create FilterAppointmentParser
CommandParser -> FilterAppointmentParser
activate FilterAppointmentParser

FilterAppointmentParser --> CommandParser
deactivate FilterAppointmentParser
CommandParser -> FilterAppointmentParser : parse("args")
activate FilterAppointmentParser

create FilterAppointmentPredicate
FilterAppointmentParser -> FilterAppointmentPredicate: FilterAppointmentPredicate()
activate FilterAppointmentPredicate
FilterAppointmentPredicate --> FilterAppointmentParser
deactivate FilterAppointmentPredicate

create FilterAppointmentCommand
FilterAppointmentParser -> FilterAppointmentCommand:FilterAppointmentCommand(pre, sd, ed)
activate FilterAppointmentCommand
FilterAppointmentCommand --> FilterAppointmentParser
deactivate FilterAppointmentCommand


FilterAppointmentParser --> CommandParser: f
deactivate FilterAppointmentParser
destroy FilterAppointmentParser

CommandParser --> LogicManager: f
deactivate CommandParser
LogicManager -> FilterAppointmentCommand : execute(model)


activate FilterAppointmentCommand
FilterAppointmentCommand -> FilterAppointmentCommand: check valid datetime

FilterAppointmentCommand -> Model : updateFilteredAppointmentList(pre)
activate Model
Model --> FilterAppointmentCommand
deactivate Model

create CommandResult
FilterAppointmentCommand -> CommandResult : CommandResult()
activate CommandResult
CommandResult --> FilterAppointmentCommand
deactivate CommandResult

FilterAppointmentCommand -> Model: getFilteredAppointmentList()
activate Model
Model --> FilterAppointmentCommand
deactivate Model

FilterAppointmentCommand --> LogicManager: r
deactivate FilterAppointmentCommand
destroy FilterAppointmentCommand
[<-- LogicManager : successfully filter appointment
@enduml
