@startuml
!include style.puml
skinparam ArrowFontStyle plain

box ListAppointmentCommand LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":CommandParser" as CommandParser LOGIC_COLOR
participant ":ListAppointmentCommandParser" as ListAppointmentCommandParser LOGIC_COLOR
' participant ":FilterAppointmentPredicate" as FilterAppointmentPredicate LOGIC_COLOR
participant ":ListAppointmentCommand" as ListAppointmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(args)
activate LogicManager
LogicManager -> CommandParser : parseCommand(args)
activate CommandParser

create ListAppointmentCommandParser
CommandParser -> ListAppointmentCommandParser
activate ListAppointmentCommandParser

ListAppointmentCommandParser --> CommandParser
deactivate ListAppointmentCommandParser
CommandParser -> ListAppointmentCommandParser : parse(args)
activate ListAppointmentCommandParser

create ListAppointmentCommand
ListAppointmentCommandParser -> ListAppointmentCommand
activate ListAppointmentCommand
ListAppointmentCommand --> ListAppointmentCommandParser
deactivate ListAppointmentCommand

ListAppointmentCommandParser --> CommandParser
deactivate ListAppointmentCommandParser
ListAppointmentCommandParser -[hidden]-> CommandParser
destroy ListAppointmentCommandParser

CommandParser --> LogicManager: command
deactivate CommandParser
LogicManager -> ListAppointmentCommand : execute(model)

activate ListAppointmentCommand
ListAppointmentCommand -> Model: filter appointment list
activate Model
Model --> ListAppointmentCommand
deactivate Model
create CommandResult
ListAppointmentCommand -> CommandResult
activate CommandResult
CommandResult --> ListAppointmentCommand
deactivate CommandResult


ListAppointmentCommand --> LogicManager: result
deactivate ListAppointmentCommand
[<-- LogicManager : return filtered appointments
@enduml
